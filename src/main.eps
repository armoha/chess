import loc;

function onPluginStart() {
  setcurpl(Player1);

  // cLoc을 (x, y) 칸으로 옮긴다.
  loc.moveCLoc(1, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(2, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(3, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(4, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(5, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(6, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(7, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);
  loc.moveCLoc(8, 2); CreateUnit(1, 'Pawn', 'cLoc', P7);

  loc.moveCLoc(1, 1); CreateUnit(1, 'Rook', 'cLoc', P7);
  loc.moveCLoc(2, 1); CreateUnit(1, 'Knight', 'cLoc', P7);
  loc.moveCLoc(3, 1); CreateUnit(1, 'Bishop', 'cLoc', P7);
  loc.moveCLoc(4, 1); CreateUnit(1, 'King', 'cLoc', P7);
  loc.moveCLoc(5, 1); CreateUnit(1, 'Queen', 'cLoc', P7);
  loc.moveCLoc(6, 1); CreateUnit(1, 'Bishop', 'cLoc', P7);
  loc.moveCLoc(7, 1); CreateUnit(1, 'Knight', 'cLoc', P7);
  loc.moveCLoc(8, 1); CreateUnit(1, 'Rook', 'cLoc', P7);

  loc.moveCLoc(1, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(2, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(3, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(4, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(5, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(6, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(7, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);
  loc.moveCLoc(8, 7); CreateUnit(1, 'Pawn', 'cLoc', P8);

  loc.moveCLoc(1, 8); CreateUnit(1, 'Rook', 'cLoc', P8);
  loc.moveCLoc(2, 8); CreateUnit(1, 'Knight', 'cLoc', P8);
  loc.moveCLoc(3, 8); CreateUnit(1, 'Bishop', 'cLoc', P8);
  loc.moveCLoc(4, 8); CreateUnit(1, 'King', 'cLoc', P8);
  loc.moveCLoc(5, 8); CreateUnit(1, 'Queen', 'cLoc', P8);
  loc.moveCLoc(6, 8); CreateUnit(1, 'Bishop', 'cLoc', P8);
  loc.moveCLoc(7, 8); CreateUnit(1, 'Knight', 'cLoc', P8);
  loc.moveCLoc(8, 8); CreateUnit(1, 'Rook', 'cLoc', P8);
}

function afterTriggerExec () {
  SetInvincibility(Enable, '(any unit)', AllPlayers, 'Anywhere');
  const clickedUnitPtr = dwread_epd(EPD(0x6284E8));

  if (clickedUnitPtr != 0) {
    const unitEPD = EPD(clickedUnitPtr);
    const unitX, unitY = dwbreak(dwread_epd(unitEPD + 0x28 / 4))[[0, 1]];
    const unitType = wread_epd(unitEPD + (0x64 / 4), 0);
    simpleprint(unitType, unitX, unitY);
  }
}
